name: ci

on:
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository name is ${{ github.event.repository.name }}."
      - run: echo "TAGS OUTPUT MAYBE ${{ steps.meta.outputs.tags }}"
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}, ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          labels: ${{ steps.meta.outputs.labels }}

  scap:
    needs: build
    permissions:
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    container:
      image: cgr.dev/chainguard/openscap:latest-dev
      env:
        SCAP_SECURITY_GUIDE_VERSION: "0.1.69"
        MICROSOFT_SARIF_MULTITOOL_VERSION: "4.5.4"
        MITRE_SAF_VERSION: "1.4.14"
        SSG_DIR: "ssg"
    steps:
      - name: Test things
        run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - name: PWD time
        run: pwd
      - name: Pull the docker image to scan
        run: |
          # shellcheck shell=sh
          set -eu
          # oscap-docker requires the image to have been pulled
          docker pull "${IMAGE_NAME}"
      - name: Run openscap
        run: |
          oscap-docker image "${IMAGE_NAME}" target xccdf eval \
          --profile "xccdf_basic_profile_.check" \
          --report /out/report.html \
          --results /out/openscap-report.xml \
          /usr/share/xml/scap/ssg/content/ssg-chainguard-gpos-ds.xml
